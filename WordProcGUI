import sys
from PyQt5.QtWidgets import QApplication, QMainWindow, QTextEdit, QAction, QFileDialog, QVBoxLayout, QWidget, QFontDialog
from PyQt5.QtGui import QIcon
import win32gui
import win32con

class WordProcessorGUI(QMainWindow):
    def __init__(self):
        super().__init__()
        self.document = ""
        self.filename = None
        self.init_ui()

    def init_ui(self):
        self.text_edit = QTextEdit()
        self.setCentralWidget(self.text_edit)

        self.create_actions()
        self.create_menus()

        self.setWindowTitle("Python Word Processor")
        self.setGeometry(100, 100, 800, 600)
        
        #holy shit this is a nightmare and I thought it would be easy to change the icon
        """
        icon_index = 2 #should be a pencil
        hicon = win32gui.ExtractIcon(win32gui.GetModuleHandle(None), "C:/Windows/System32/shell32.dll", icon_index)
        if hicon:
            icon_info = win32gui.GetIconInfo(hicon[0])
            icon_bitmap = win32gui.GetBitmapBits(icon_info[4])
            icon_mask = win32gui.GetBitmapBits(icon_info[5])
            icon_width = icon_info[1]
            icon_height = icon_info[2]
            
            icon_handle = win32gui.CreateBitmapIconFromBuffer(icon_bitmap, icon_mask, icon_width, icon_height)
            icon = QIcon(icon_handle)
            self.setWindowIcon(icon)

            win32gui.DeleteObject(icon_bitmap)
            win32gui.DeleteObject(icon_mask)
            win32gui.DestroyIcon(hicon[0])
          """
        
        self.show()

    def create_actions(self):
        self.new_action = QAction("New", self)
        self.new_action.triggered.connect(self.create_document)

        self.open_action = QAction("Open", self)
        self.open_action.triggered.connect(self.open_document)

        self.save_action = QAction("Save", self)
        self.save_action.triggered.connect(self.save_document)

        self.save_as_action = QAction("Save As...", self)
        self.save_as_action.triggered.connect(self.save_document_as)

        self.exit_action = QAction("Exit", self)
        self.exit_action.triggered.connect(self.close)

        self.edit_action = QAction("Edit", self)
        self.edit_action.triggered.connect(self.edit_document)

        self.copy_action = QAction("Copy", self)
        self.copy_action.triggered.connect(self.copy_text)

        self.paste_action = QAction("Paste", self)
        self.paste_action.triggered.connect(self.paste_text)

        self.font_action = QAction("Change Font", self)
        self.font_action.triggered.connect(self.change_font)

    def create_menus(self):
        menu_bar = self.menuBar()

        file_menu = menu_bar.addMenu("File")
        file_menu.addAction(self.new_action)
        file_menu.addAction(self.open_action)
        file_menu.addAction(self.save_action)
        file_menu.addAction(self.save_as_action)
        file_menu.addAction(self.exit_action)

        edit_menu = menu_bar.addMenu("Edit")
        edit_menu.addAction(self.edit_action)
        edit_menu.addAction(self.copy_action)
        edit_menu.addAction(self.paste_action)

        format_menu = menu_bar.addMenu("Format")
        #format_action isn't needed anymore with the Font options
        #format_menu.addAction(self.format_action)
        format_menu.addAction(self.font_action)      

    def create_document(self):
        self.text_edit.clear()
        self.filename = None

    def open_document(self):
        options = QFileDialog.Options()
        filename, _ = QFileDialog.getOpenFileName(self, "Open File", "", "Text Files (*.txt);;All Files (*)", options=options)
        if filename:
            with open(filename, "r") as file:
                self.text_edit.setPlainText(file.read())
                self.filename = filename

    def save_document(self):
        if self.filename:
            with open(self.filename, "w") as file:
                file.write(self.text_edit.toPlainText())
        else:
            self.save_document_as()

    def save_document_as(self):
        options = QFileDialog.Options()
        filename, _ = QFileDialog.getSaveFileName(self, "Save As", "", "Text Files (*.txt);;All Files (*)", options=options)
        if filename:
            self.filename = filename
            self.save_document()

    def edit_document(self):
        pass

    def copy_text(self):
        cursor = self.text_edit.textCursor()
        selected_text = cursor.selectedText()
        if selected_text:
            clipboard = QApplication.clipboard()
            clipboard.setText(selected_text)

    def paste_text(self):
        clipboard = QApplication.clipboard()
        text_to_paste = clipboard.text()
        if text_to_paste:
            self.text_edit.insertPlainText(text_to_paste)
    
    def change_font(self):
        font, ok = QFontDialog.getFont(self.text_edit.font(), self, "Select Font")
        if ok:
            self.text_edit.setFont(font)


if __name__ == "__main__":
    app = QApplication(sys.argv)
    wp = WordProcessorGUI()
    sys.exit(app.exec_())