import sys
from PyQt5.QtWidgets import QApplication, QMainWindow, QTextEdit, QAction, QFileDialog, QVBoxLayout, QWidget


class WordProcessorGUI(QMainWindow):
    def __init__(self):
        super().__init__()
        self.document = ""
        self.filename = None
        self.init_ui()

    def init_ui(self):
        self.text_edit = QTextEdit()
        self.setCentralWidget(self.text_edit)

        self.create_actions()
        self.create_menus()

        self.setWindowTitle("Word Processor")
        self.setGeometry(100, 100, 800, 600)
        self.show()

    def create_actions(self):
        self.new_action = QAction("New", self)
        self.new_action.triggered.connect(self.create_document)

        self.open_action = QAction("Open", self)
        self.open_action.triggered.connect(self.open_document)

        self.save_action = QAction("Save", self)
        self.save_action.triggered.connect(self.save_document)

        self.save_as_action = QAction("Save As...", self)
        self.save_as_action.triggered.connect(self.save_document_as)

        self.exit_action = QAction("Exit", self)
        self.exit_action.triggered.connect(self.close)

        self.edit_action = QAction("Edit", self)
        self.edit_action.triggered.connect(self.edit_document)

        self.format_action = QAction("Format", self)
        self.format_action.triggered.connect(self.format_text)

    def create_menus(self):
        menu_bar = self.menuBar()

        file_menu = menu_bar.addMenu("File")
        file_menu.addAction(self.new_action)
        file_menu.addAction(self.open_action)
        file_menu.addAction(self.save_action)
        file_menu.addAction(self.save_as_action)
        file_menu.addAction(self.exit_action)

        edit_menu = menu_bar.addMenu("Edit")
        edit_menu.addAction(self.edit_action)

        format_menu = menu_bar.addMenu("Format")
        format_menu.addAction(self.format_action)

    def create_document(self):
        self.text_edit.clear()
        self.filename = None

    def open_document(self):
        options = QFileDialog.Options()
        filename, _ = QFileDialog.getOpenFileName(self, "Open File", "", "Text Files (*.txt);;All Files (*)", options=options)
        if filename:
            with open(filename, "r") as file:
                self.text_edit.setPlainText(file.read())
                self.filename = filename

    def save_document(self):
        if self.filename:
            with open(self.filename, "w") as file:
                file.write(self.text_edit.toPlainText())
        else:
            self.save_document_as()

    def save_document_as(self):
        options = QFileDialog.Options()
        filename, _ = QFileDialog.getSaveFileName(self, "Save As", "", "Text Files (*.txt);;All Files (*)", options=options)
        if filename:
            self.filename = filename
            self.save_document()

    def edit_document(self):
        pass

    def format_text(self):
        pass


if __name__ == "__main__":
    app = QApplication(sys.argv)
    wp = WordProcessorGUI()
    sys.exit(app.exec_())